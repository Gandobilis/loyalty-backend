spring.application.name=loyalty-backend
application.version=@project.version@

spring.datasource.url=jdbc:h2:mem:default
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=${SQL_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SQL_SHOW_SQL:false}

logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${SQL_LOG_LEVEL:INFO}

# Logging Pattern with Correlation ID
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [CorrelationId=%X{correlationId}] - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [CorrelationId=%X{correlationId}] - %msg%n

# Application Logging Levels
logging.level.com.multi.loyaltybackend=${APP_LOG_LEVEL:INFO}
logging.level.root=${ROOT_LOG_LEVEL:INFO}

spring.h2.console.enabled=${H2_CONSOLE_ENABLED:false}
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}

# Email (SMTP) Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Google OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Application URLs
app.frontend.url=${APP_FRONTEND_URL:http://localhost:3000}
app.server.url=${APP_SERVER_URL:http://localhost:8080}


spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/actuator

# Static Resources Configuration
spring.web.resources.static-locations=classpath:/static/
spring.mvc.favicon.enabled=false

# AWS Configuration
aws.region=${AWS_REGION:us-east-1}
aws.access-key-id=${AWS_ACCESS_KEY_ID:}
aws.secret-access-key=${AWS_SECRET_ACCESS_KEY:}

# DynamoDB Configuration
aws.dynamodb.endpoint=${AWS_DYNAMODB_ENDPOINT:}
aws.dynamodb.chat-messages-table=${AWS_DYNAMODB_CHAT_TABLE:ChatMessages}

# S3 Configuration
aws.s3.endpoint=${AWS_S3_ENDPOINT:}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:loyalty-chat-attachments}
aws.s3.presigned-url-duration=${AWS_S3_PRESIGNED_URL_DURATION:3600}

# SQS Configuration (for notifications)
aws.sqs.queue-url=${AWS_SQS_QUEUE_URL:}

# SNS Configuration (for push notifications)
aws.sns.topic-arn=${AWS_SNS_TOPIC_ARN:}

# JPA Auditing
spring.jpa.properties.hibernate.envers.audit_table_suffix=_audit
spring.data.jpa.repositories.bootstrap-mode=default
