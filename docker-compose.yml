version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: loyalty-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: loyalty_db
      POSTGRES_USER: loyalty_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-loyalty_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - loyalty-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U loyalty_user -d loyalty_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: loyalty-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/loyalty_db
      SPRING_DATASOURCE_USERNAME: loyalty_user
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-loyalty_password}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-86400000}

      # Email Configuration
      MAIL_HOST: ${MAIL_HOST:-smtp.gmail.com}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}

      # Google OAuth2 Configuration
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}

      # Application Configuration
      APP_FRONTEND_URL: ${APP_FRONTEND_URL:-http://localhost:3000}
      APP_SERVER_URL: ${APP_SERVER_URL:-http://localhost:8080}

      # Development Settings
      H2_CONSOLE_ENABLED: ${H2_CONSOLE_ENABLED:-false}
      SQL_SHOW_SQL: ${SQL_SHOW_SQL:-false}
      SQL_LOG_LEVEL: ${SQL_LOG_LEVEL:-INFO}
    ports:
      - "8080:8080"
    volumes:
      # Mount uploads directory for file persistence
      - ./uploads:/app/uploads
    networks:
      - loyalty-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: loyalty-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@loyalty.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - loyalty-network
    profiles:
      - tools

networks:
  loyalty-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
